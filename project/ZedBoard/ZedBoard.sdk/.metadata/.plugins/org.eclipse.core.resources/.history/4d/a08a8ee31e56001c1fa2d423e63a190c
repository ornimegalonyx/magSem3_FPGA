#include <VGA.h>

#include <mtds.h>
#include <MyDisp.h>
#include <stdint.h>
#include <string.h>
#include "sleep.h"
#include "xil_cache.h"
#include "xparameters.h"
#include "xgpio.h"

#include "xil_mmu.h"
#include "xil_assert.h"

#define VGA_MEMORY_ATTRIBUTE 		0x00010c06

// frame for VGA SLAVE
#define VGA_FRAME_ADDRESS 			0x00200000
// frame for CPU SLAVE
vga_frame our_vga_frame;
vga our_vga;

vga_pixel cur_color = { 0, 0, 0 };

void vga_setup(vga* vga_obj, uint32_t* config_address,
		vga_frame* vga_frame_obj) {
	vga_obj->config_address = config_address;
	vga_obj->vga_frame_obj = vga_frame_obj;
	vga_frame_clear(vga_frame_obj);
	vga_obj->config_address[VGA_ADDR_ADDRESS_REG] = (uint32_t) vga_frame_obj;
	vga_set_start(vga_obj, 1);
}

void setup() {
	/* Configure frame buffer memory to device. */
	Xil_SetTlbAttributes(VGA_FRAME_ADDRESS, VGA_MEMORY_ATTRIBUTE);

	vga_setup(&our_vga, (uint32_t*) 0x43C30000, (vga_frame*) VGA_FRAME_ADDRESS);
	vga_frame_clear(&our_vga_frame);
}

int main() {
	setup();
	while (1) {
		vga_frame_draw(&our_vga_frame, &our_vga);
	}

	// Start Initialize Camera Module
	int result;
	result = InitCamera();
	if (result != XST_SUCCESS) {
		return 0;
	}

	// Set RGB 565 mode
	InitRGB565();

	// Set QVGA mode
	InitVGA();

	// Load default Camera registers
	InitDefaultReg();

	//Camera Module register dump after initialization
	//DumpReg();

	vdma_handle handle_s2mm;
	vdma_handle handle_mm2s;

	// Setup VDMA handle and memory-mapped ranges
	vdma_setup(&handle_s2mm, VDMA_S2MM, WIDTH, HEIGHT, 2, 0x10000000,
			0x11000000, 0x12000000);
	vdma_setup(&handle_mm2s, VDMA_MM2S, WIDTH, HEIGHT, 2, 0x10000000,
			0x11000000, 0x12000000);

	// Start triple buffering
	vdma_start_s2mm(&handle_s2mm);
	vdma_start_mm2s(&handle_mm2s);

	//Xil_Out32(OV7670_STREAM, 1);

	while (1) {
		// TODO: handler

	}

	return 0;
}
