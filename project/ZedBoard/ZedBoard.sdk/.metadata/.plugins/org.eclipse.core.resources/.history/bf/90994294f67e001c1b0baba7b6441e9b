#include "camera.h"
#include "vdma_api.h"
#include "xaxivdma.h"
#include "xparameters.h"
#include "xintc.h"

#define OV7670_STREAM 0x43C00000
#define HEIGHT 480
#define WIDTH 640
#define ADDR_OFFSET WIDTH* HEIGHT * 2

uint16_t* buffer_1;
uint16_t* buffer_2;

unsigned int srcBuffer = (0x11000000);

int main() {
  int Status;
  Status = InitCamera();
  if (Status != XST_SUCCESS) {
    return 0;
  }
  InitDefaultReg();
  InitRGB565();
  InitVGA();

  XAxiVdma vdma_mm2s;
  XAxiVdma vdma_s2mm;

  Status = run_triple_frame_buffer(&vdma_s2mm, XPAR_VDMA_S2MM_DEVICE_ID, WIDTH,
                                   HEIGHT, srcBuffer, 100, 0);
  if (Status != XST_SUCCESS) {
    xil_printf("Transfer of frames failed with error = %d\r\n", Status);
    return XST_FAILURE;
  } else {
    xil_printf("Transfer of frames started \r\n");
  }

  Status = run_triple_frame_buffer(&vdma_mm2s, XPAR_VDMA_MM2S_DEVICE_ID, WIDTH,
                                   HEIGHT, srcBuffer, 100, 0);
  if (Status != XST_SUCCESS) {
    xil_printf("Transfer of frames failed with error = %d\r\n", Status);
    return XST_FAILURE;
  } else {
    xil_printf("Transfer of frames started \r\n");
  }

  Xil_Out32(OV7670_STREAM, 1);

  while (1) {
    // for (int i = 0; i < WIDTH * HEIGHT; i++) {
    //   buffer_2[i] = (buffer_1[i] > 0x000F) ? buffer_1[i] : 0xFFFF;
    // }
  };
  return 0;
}
